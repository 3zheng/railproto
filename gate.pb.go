// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: gate.proto

package protodefine

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMDID_Gate int32

const (
	CMDID_Gate_IDUnknowGt     CMDID_Gate = 0 //0保留
	CMDID_Gate_IDPulseReq     CMDID_Gate = 1 //测速请求
	CMDID_Gate_IDPulseRsp     CMDID_Gate = 2 //测速回复
	CMDID_Gate_IDTransferData CMDID_Gate = 3 //gate的转发数据包
	CMDID_Gate_IDAuthInfo     CMDID_Gate = 4 //连接认证信息 暂时用不上
	CMDID_Gate_IDLoginToken   CMDID_Gate = 5 //gate向client发送的登录token 暂时用不上
	CMDID_Gate_IDHelloReq     CMDID_Gate = 6 //Client->Gate发请求 暂时用不上
	CMDID_Gate_IDHelloRsp     CMDID_Gate = 7 //Gate->Client发回复 暂时用不上
	CMDID_Gate_IDLastGt       CMDID_Gate = 100
)

// Enum value maps for CMDID_Gate.
var (
	CMDID_Gate_name = map[int32]string{
		0:   "IDUnknowGt",
		1:   "IDPulseReq",
		2:   "IDPulseRsp",
		3:   "IDTransferData",
		4:   "IDAuthInfo",
		5:   "IDLoginToken",
		6:   "IDHelloReq",
		7:   "IDHelloRsp",
		100: "IDLastGt",
	}
	CMDID_Gate_value = map[string]int32{
		"IDUnknowGt":     0,
		"IDPulseReq":     1,
		"IDPulseRsp":     2,
		"IDTransferData": 3,
		"IDAuthInfo":     4,
		"IDLoginToken":   5,
		"IDHelloReq":     6,
		"IDHelloRsp":     7,
		"IDLastGt":       100,
	}
)

func (x CMDID_Gate) Enum() *CMDID_Gate {
	p := new(CMDID_Gate)
	*p = x
	return p
}

func (x CMDID_Gate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMDID_Gate) Descriptor() protoreflect.EnumDescriptor {
	return file_gate_proto_enumTypes[0].Descriptor()
}

func (CMDID_Gate) Type() protoreflect.EnumType {
	return &file_gate_proto_enumTypes[0]
}

func (x CMDID_Gate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CMDID_Gate.Descriptor instead.
func (CMDID_Gate) EnumDescriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{0}
}

type HelloRsp_RspFlag int32

const (
	HelloRsp_UNKNOWN       HelloRsp_RspFlag = 0
	HelloRsp_EncryptInfo   HelloRsp_RspFlag = 1 //加密信息	encrypt_key这是存在的
	HelloRsp_AdviceNewGate HelloRsp_RspFlag = 2 //建议客户端换一个gate连接，可能因为当前gate的负载较大
	HelloRsp_LoginToken    HelloRsp_RspFlag = 4 //登录令牌
)

// Enum value maps for HelloRsp_RspFlag.
var (
	HelloRsp_RspFlag_name = map[int32]string{
		0: "UNKNOWN",
		1: "EncryptInfo",
		2: "AdviceNewGate",
		4: "LoginToken",
	}
	HelloRsp_RspFlag_value = map[string]int32{
		"UNKNOWN":       0,
		"EncryptInfo":   1,
		"AdviceNewGate": 2,
		"LoginToken":    4,
	}
)

func (x HelloRsp_RspFlag) Enum() *HelloRsp_RspFlag {
	p := new(HelloRsp_RspFlag)
	*p = x
	return p
}

func (x HelloRsp_RspFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HelloRsp_RspFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_gate_proto_enumTypes[1].Descriptor()
}

func (HelloRsp_RspFlag) Type() protoreflect.EnumType {
	return &file_gate_proto_enumTypes[1]
}

func (x HelloRsp_RspFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HelloRsp_RspFlag.Descriptor instead.
func (HelloRsp_RspFlag) EnumDescriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{6, 0}
}

type PulseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base         *BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"` //BaseInfo来自于types.proto
	MySpeed      uint32    `protobuf:"varint,2,opt,name=my_speed,json=mySpeed,proto3" json:"my_speed,omitempty"`
	SpeedData    uint32    `protobuf:"varint,3,opt,name=speed_data,json=speedData,proto3" json:"speed_data,omitempty"`
	AttachedData []byte    `protobuf:"bytes,4,opt,name=attached_data,json=attachedData,proto3" json:"attached_data,omitempty"`
}

func (x *PulseReq) Reset() {
	*x = PulseReq{}
	mi := &file_gate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseReq) ProtoMessage() {}

func (x *PulseReq) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseReq.ProtoReflect.Descriptor instead.
func (*PulseReq) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{0}
}

func (x *PulseReq) GetBase() *BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PulseReq) GetMySpeed() uint32 {
	if x != nil {
		return x.MySpeed
	}
	return 0
}

func (x *PulseReq) GetSpeedData() uint32 {
	if x != nil {
		return x.SpeedData
	}
	return 0
}

func (x *PulseReq) GetAttachedData() []byte {
	if x != nil {
		return x.AttachedData
	}
	return nil
}

type PulseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SpeedData   uint32    `protobuf:"varint,2,opt,name=speed_data,json=speedData,proto3" json:"speed_data,omitempty"`
	AttachdData []byte    `protobuf:"bytes,3,opt,name=attachd_data,json=attachdData,proto3" json:"attachd_data,omitempty"`
}

func (x *PulseRsp) Reset() {
	*x = PulseRsp{}
	mi := &file_gate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseRsp) ProtoMessage() {}

func (x *PulseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseRsp.ProtoReflect.Descriptor instead.
func (*PulseRsp) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{1}
}

func (x *PulseRsp) GetBase() *BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PulseRsp) GetSpeedData() uint32 {
	if x != nil {
		return x.SpeedData
	}
	return 0
}

func (x *PulseRsp) GetAttachdData() []byte {
	if x != nil {
		return x.AttachdData
	}
	return nil
}

type GateTransferData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                *BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	AttApptype          uint32    `protobuf:"varint,2,opt,name=att_apptype,json=attApptype,proto3" json:"att_apptype,omitempty"` //目标或源apptype
	AttAppid            uint32    `protobuf:"varint,3,opt,name=att_appid,json=attAppid,proto3" json:"att_appid,omitempty"`       //目标或源appid
	DataCmdKind         uint32    `protobuf:"varint,4,opt,name=data_cmd_kind,json=dataCmdKind,proto3" json:"data_cmd_kind,omitempty"`
	DataCmdSubid        uint32    `protobuf:"varint,5,opt,name=data_cmd_subid,json=dataCmdSubid,proto3" json:"data_cmd_subid,omitempty"`
	Data                []byte    `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	ReqId               uint32    `protobuf:"varint,7,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`                                            //附加数据
	ClientRemoteAddress string    `protobuf:"bytes,8,opt,name=client_remote_address,json=clientRemoteAddress,proto3" json:"client_remote_address,omitempty"` //客户端的ip及其端口
}

func (x *GateTransferData) Reset() {
	*x = GateTransferData{}
	mi := &file_gate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GateTransferData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateTransferData) ProtoMessage() {}

func (x *GateTransferData) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateTransferData.ProtoReflect.Descriptor instead.
func (*GateTransferData) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{2}
}

func (x *GateTransferData) GetBase() *BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GateTransferData) GetAttApptype() uint32 {
	if x != nil {
		return x.AttApptype
	}
	return 0
}

func (x *GateTransferData) GetAttAppid() uint32 {
	if x != nil {
		return x.AttAppid
	}
	return 0
}

func (x *GateTransferData) GetDataCmdKind() uint32 {
	if x != nil {
		return x.DataCmdKind
	}
	return 0
}

func (x *GateTransferData) GetDataCmdSubid() uint32 {
	if x != nil {
		return x.DataCmdSubid
	}
	return 0
}

func (x *GateTransferData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GateTransferData) GetReqId() uint32 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

func (x *GateTransferData) GetClientRemoteAddress() string {
	if x != nil {
		return x.ClientRemoteAddress
	}
	return ""
}

type AuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserId uint64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id
	Reason uint32    `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`               //变更原因
	Info   string    `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`                    //描述信息
}

func (x *AuthInfo) Reset() {
	*x = AuthInfo{}
	mi := &file_gate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInfo) ProtoMessage() {}

func (x *AuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInfo.ProtoReflect.Descriptor instead.
func (*AuthInfo) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{3}
}

func (x *AuthInfo) GetBase() *BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *AuthInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AuthInfo) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *AuthInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type LoginToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base       *BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	LoginToken uint32    `protobuf:"varint,2,opt,name=login_token,json=loginToken,proto3" json:"login_token,omitempty"`
}

func (x *LoginToken) Reset() {
	*x = LoginToken{}
	mi := &file_gate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginToken) ProtoMessage() {}

func (x *LoginToken) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginToken.ProtoReflect.Descriptor instead.
func (*LoginToken) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{4}
}

func (x *LoginToken) GetBase() *BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LoginToken) GetLoginToken() uint32 {
	if x != nil {
		return x.LoginToken
	}
	return 0
}

type HelloReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base          *BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	AdId          uint32    `protobuf:"varint,2,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	Others        string    `protobuf:"bytes,3,opt,name=others,proto3" json:"others,omitempty"`
	BuilderNo     uint32    `protobuf:"varint,4,opt,name=builder_no,json=builderNo,proto3" json:"builder_no,omitempty"`
	GameKind      uint32    `protobuf:"varint,5,opt,name=game_kind,json=gameKind,proto3" json:"game_kind,omitempty"`
	ClientVersion string    `protobuf:"bytes,6,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	// =1 表示pc win7 winxp
	// =2 表示ios
	// =3 表示android
	// =4 表示win10
	ClientType uint32 `protobuf:"varint,7,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
}

func (x *HelloReq) Reset() {
	*x = HelloReq{}
	mi := &file_gate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReq) ProtoMessage() {}

func (x *HelloReq) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReq.ProtoReflect.Descriptor instead.
func (*HelloReq) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{5}
}

func (x *HelloReq) GetBase() *BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *HelloReq) GetAdId() uint32 {
	if x != nil {
		return x.AdId
	}
	return 0
}

func (x *HelloReq) GetOthers() string {
	if x != nil {
		return x.Others
	}
	return ""
}

func (x *HelloReq) GetBuilderNo() uint32 {
	if x != nil {
		return x.BuilderNo
	}
	return 0
}

func (x *HelloReq) GetGameKind() uint32 {
	if x != nil {
		return x.GameKind
	}
	return 0
}

func (x *HelloReq) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *HelloReq) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

type HelloRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	RspFlag     uint32    `protobuf:"varint,2,opt,name=rsp_flag,json=rspFlag,proto3" json:"rsp_flag,omitempty"`            //通知的消息内容
	GateAddress []string  `protobuf:"bytes,3,rep,name=gate_address,json=gateAddress,proto3" json:"gate_address,omitempty"` //其他gate地址
	EncryptKey  []byte    `protobuf:"bytes,4,opt,name=encrypt_key,json=encryptKey,proto3" json:"encrypt_key,omitempty"`    //私钥
	LoginToken  uint32    `protobuf:"varint,5,opt,name=login_token,json=loginToken,proto3" json:"login_token,omitempty"`   //登录令牌token
	// =0 表示最新版本
	// =1 表示有新版本，但当前版本还可以用
	// =2 强制用户更新版本，当前连接会被断开
	VersionResult uint32 `protobuf:"varint,6,opt,name=version_result,json=versionResult,proto3" json:"version_result,omitempty"`
	DownUrl       string `protobuf:"bytes,7,opt,name=down_url,json=downUrl,proto3" json:"down_url,omitempty"` //如果有新的版本，下载地址
}

func (x *HelloRsp) Reset() {
	*x = HelloRsp{}
	mi := &file_gate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRsp) ProtoMessage() {}

func (x *HelloRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRsp.ProtoReflect.Descriptor instead.
func (*HelloRsp) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{6}
}

func (x *HelloRsp) GetBase() *BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *HelloRsp) GetRspFlag() uint32 {
	if x != nil {
		return x.RspFlag
	}
	return 0
}

func (x *HelloRsp) GetGateAddress() []string {
	if x != nil {
		return x.GateAddress
	}
	return nil
}

func (x *HelloRsp) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

func (x *HelloRsp) GetLoginToken() uint32 {
	if x != nil {
		return x.LoginToken
	}
	return 0
}

func (x *HelloRsp) GetVersionResult() uint32 {
	if x != nil {
		return x.VersionResult
	}
	return 0
}

func (x *HelloRsp) GetDownUrl() string {
	if x != nil {
		return x.DownUrl
	}
	return ""
}

var File_gate_proto protoreflect.FileDescriptor

var file_gate_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x50, 0x75, 0x6c, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a,
	0x08, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa4, 0x02, 0x0a, 0x10, 0x47, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x5f, 0x61, 0x70,
	0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x41, 0x70, 0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x5f, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x74, 0x74, 0x41,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6d, 0x64,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x43, 0x6d, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6d, 0x64, 0x53, 0x75, 0x62, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x7a, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x0a, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc3, 0x02, 0x0a,
	0x08, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x73, 0x70, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x73, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x4a, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x74, 0x65,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x10, 0x04, 0x2a, 0xa0, 0x01, 0x0a, 0x0a, 0x43, 0x4d, 0x44, 0x49, 0x44, 0x5f, 0x47, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x47, 0x74, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x71, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x73, 0x70, 0x10,
	0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x71, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x73, 0x70, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x44, 0x4c, 0x61, 0x73,
	0x74, 0x47, 0x74, 0x10, 0x64, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x33, 0x7a, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x72, 0x61, 0x69, 0x6c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gate_proto_rawDescOnce sync.Once
	file_gate_proto_rawDescData = file_gate_proto_rawDesc
)

func file_gate_proto_rawDescGZIP() []byte {
	file_gate_proto_rawDescOnce.Do(func() {
		file_gate_proto_rawDescData = protoimpl.X.CompressGZIP(file_gate_proto_rawDescData)
	})
	return file_gate_proto_rawDescData
}

var file_gate_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gate_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gate_proto_goTypes = []any{
	(CMDID_Gate)(0),          // 0: protodefine.CMDID_Gate
	(HelloRsp_RspFlag)(0),    // 1: protodefine.HelloRsp.RspFlag
	(*PulseReq)(nil),         // 2: protodefine.PulseReq
	(*PulseRsp)(nil),         // 3: protodefine.PulseRsp
	(*GateTransferData)(nil), // 4: protodefine.GateTransferData
	(*AuthInfo)(nil),         // 5: protodefine.AuthInfo
	(*LoginToken)(nil),       // 6: protodefine.LoginToken
	(*HelloReq)(nil),         // 7: protodefine.HelloReq
	(*HelloRsp)(nil),         // 8: protodefine.HelloRsp
	(*BaseInfo)(nil),         // 9: protodefine.BaseInfo
}
var file_gate_proto_depIdxs = []int32{
	9, // 0: protodefine.PulseReq.base:type_name -> protodefine.BaseInfo
	9, // 1: protodefine.PulseRsp.base:type_name -> protodefine.BaseInfo
	9, // 2: protodefine.GateTransferData.base:type_name -> protodefine.BaseInfo
	9, // 3: protodefine.AuthInfo.base:type_name -> protodefine.BaseInfo
	9, // 4: protodefine.LoginToken.base:type_name -> protodefine.BaseInfo
	9, // 5: protodefine.HelloReq.base:type_name -> protodefine.BaseInfo
	9, // 6: protodefine.HelloRsp.base:type_name -> protodefine.BaseInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_gate_proto_init() }
func file_gate_proto_init() {
	if File_gate_proto != nil {
		return
	}
	file_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gate_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gate_proto_goTypes,
		DependencyIndexes: file_gate_proto_depIdxs,
		EnumInfos:         file_gate_proto_enumTypes,
		MessageInfos:      file_gate_proto_msgTypes,
	}.Build()
	File_gate_proto = out.File
	file_gate_proto_rawDesc = nil
	file_gate_proto_goTypes = nil
	file_gate_proto_depIdxs = nil
}
